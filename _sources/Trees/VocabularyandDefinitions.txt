..  Copyright (C)  Brad Miller, David Ranum, Jeffrey Elkner, Peter Wentworth, Allen B. Downey, Chris
    Meyers, and Dario Mitchell.  Permission is granted to copy, distribute
    and/or modify this document under the terms of the GNU Free Documentation
    License, Version 1.3 or any later version published by the Free Software
    Foundation; with Invariant Sections being Forward, Prefaces, and
    Contributor List, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
    the license is included in the section entitled "GNU Free Documentation
    License".

Терминология и определения
---------------------------

После того, как мы рассмотрели примеры деревьев, дадим формальные определения им и их компонентам.

Узел
  Узел - это основная часть дерева. Он может иметь название, которое мы будем называть "ключом". Также узел может содержать дополнительную информацию, которую мы назовём "полезной нагрузкой". Хотя во многих алгоритмах для деревьев ей не уделяется до статочно внимания, для приложений, использующих эту структуру данных, она часто оказывается критичным фактором.

Ветвь
  Ветвь - другая фундаментальная часть дерева. Оно соединяет два узла вместе, показывая наличие между ними определённых отношений. Каждый узел (кроме корня) имеет ровно одну входящую ветвь. При этом он может иметь несколько исходящих ветвей.

Корень
  Корень дерева - единственный узел, не имеющий входящих ветвей. На :ref:`рисунке 2 <fig_filetree>` / - корень дерева.

Путь
  Путь - это упорядоченный список узлов, соединённых ветвями. Например, Mammal :math:`\rightarrow` Carnivora :math:`\rightarrow` Felidae :math:`\rightarrow` Felis :math:`\rightarrow` Domestica - это путь.

Дети (потомки)
  Набор узлов :math:`c`, имеющих входящие ветви от одного узла, называются его детьми. На :ref:`рисунке 2 <fig_filetree>` узлы log/, spool/ и yp/ - потомки узла var/.

Родитель (предок)
  Узел является родителем всех узлов, с которыми связан исходящими ветвями. На :ref:`рисунке 2 <fig_filetree>` узел var/ является родителем узлов log/, spool/ и yp/.

Братья
  Узлы дерева, являющиеся детьми одного родителя, называют братьями. Примером могут послужить etc/ и usr/ в дереве файловой системы.

Поддерево
  Поддерево - это набор узлов и ветвей, состоящий родителя и всех его потомков.

Лист
  Лист - это узел, у которого нет детей. Например, Human и
  Chimpanzee - листья на :ref:`рисунке 1 <fig_biotree>`.

Уровень
  Уровень узла :math:`n` - это число ветвей в пути от корня до :math:`n`. Например, уровень Felis на :ref:`рисунке 1 <fig_biotree>` равен пяти. По определению, уровень корня - нуль.

Высота
  Высота дерева равна максимальному уровню любого из узлов дерева. Например, высота дерева на :ref:`рисунке 2 <fig_filetree>` равна двум.

А теперь, определившись с основной терминологией, дадим дереву формальное определение. Фактически, мы сформулируем два определения: первое будет включать узлы и ветви, а второе (чью полезность мы докажем на практике) будет рекурсивным.

*Определение 1:* Дерево состоит из набора узлов и набора ветвей, попарно соединяющих узлы. Дерево имеет следующие свойства:

- Один из узлов дерева определён, как его корень.

- Каждый узел :math:`n` (кроме корневого), соединяется ветвью с единственным другим узлом :math:`p`, где :math:`p` - родитель :math:`n`.

- Каждый узел соединён с корнем единственно возможным путём.

- Если каждый из узлов дерева имеет максимум двух потомков, то такая структура называется **двоичным деревом**.

На :ref:`рисунке 3 <fig_nodeedgetree>` изображено дерево, удовлетворяющее определению 1. Стрелки на ветвях показывают направление связи.

.. _fig_nodeedgetree:

.. figure:: Figures/treedef1.png
   :align: center
   :alt: image

   Рисунок 3: Дерево, содержащее набор узлов и ветвей.

*Определение 2:* Дерево либо пусто, либо содержит корень и нуль или более поддеревьев, каждое из которых тоже является деревом. Корень каждого поддерева соединён ветвью с родительским деревом.

:ref:`Рисунок 4 <fig_recursivetree>` иллюстрирует это определение. Используя его, можно сказать, что изображённая структура имеет как минимум четыре узла, поскольку каждый из треугольников, представляющих поддеревья, должен иметь корень. В этом дереве может быть намного больше узлов, но сказать точнее нельзя до тех пор, пока мы не продвинемся по дереву глубже. 

.. _fig_recursivetree:

.. figure:: Figures/TreeDefRecursive.png
   :align: center
   :alt: image

   Рисунок 4: Рекурсивное определение дерева
