..  Copyright (C)  Brad Miller, David Ranum, Jeffrey Elkner, Peter Wentworth, Allen B. Downey, Chris
    Meyers, and Dario Mitchell.  Permission is granted to copy, distribute
    and/or modify this document under the terms of the GNU Free Documentation
    License, Version 1.3 or any later version published by the Free Software
    Foundation; with Invariant Sections being Forward, Prefaces, and
    Contributor List, no Front-Cover Texts, and no Back-Cover Texts.  A copy of
    the license is included in the section entitled "GNU Free Documentation
    License".

Производительность АВЛ-дерева
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Прежде, чем идти дальше, давайте рассмотрим результат соблюдения этого нового фактора баланса. Утверждением, которое нужно доказать, будет гарантия, что если дерево имеет фактор сбалансированности -1, 0 или 1, то мы получим лучшую О-производительность для операций с ключами. Начнём с размышлений о том, как условие баланса изменяет наихудший случай. Есть две возможности, которые следует рассмотреть: перевес дерева влево и вправо. Мы будем рассматривать деревья высотой 0, 1, 2, и 3, и :ref:`рисунок 2 <fig_worstAVL>` иллюстрирует дерево, по новым правилам максимально перевешивающее влево.

.. _fig_worstAVL:

.. figure:: Figures/worstAVL.png
   :align: center

   Рисунок 2: Худший случай перевешивающих влево АВЛ-деревьев.

Глядя на общее количество узлов, можно заметить, что для дерева высотой 0 оно равно 1, высотой 1 - :math:`1+1 = 2`, высотой 2 - :math:`1+1+2 = 4`, высотой 3 - :math:`1 + 2 + 4 = 7`. Обобщая, количество узлов для дерева высотой h (:math:`N_h`) равно 

.. math::

   N_h = 1 + N_{h-1} + N_{h-2}  

Эта рекуррентность может показаться вам знакомой, поскольку очень похожа на последовательность Фибоначчи. Этот факт можно использовать для вывода формулы высоты АВЛ-дерева с заданным количеством узлов. Напомним, что в последовательности Фибоначчи :math:`i_{ое}` число равно

.. math::

   F_0 = 0 \\
   F_1 = 1 \\
   F_i = F_{i-1} + F_{i-2}  \text{ for all } i \ge 2

Важный математический результат заключается в том, что числа Фибоначчи с каждым разом становятся всё больше и больше, а отношение :math:`F_i / F_{i-1}` всё ближе и ближе к "золотому сечению" :math:`\Phi`, определяемому как :math:`\Phi = \frac{1 + \sqrt{5}}{2}`. Вы можете обратиться к текстам по математике, если хотите посмотреть вывод предыдущего уравнения. Мы же просто используем его для приближённого вычисления :math:`F_i` как :math:`F_i = \Phi^i/\sqrt{5}`. Если переписать уравнение для :math:`N_h` с использованием этой аппроксимации, то получится

.. math::

   N_h = F_{h+2} - 1, h \ge 1

Заменив ссылку на Фибоначчи его аппроксимацией к "золотому сечению", получим

.. math::

   N_h = \frac{\Phi^{h+2}}{\sqrt{5}} - 1

Перегруппировав переменные и взяв от обоих частей логарифм по основанию 2, получим следующее решение:

.. math::

   \log{N_h+1} = (H+2)\log{\Phi} - \frac{1}{2} \log{5} \\
   h = \frac{\log{N_h+1} - 2 \log{\Phi} + \frac{1}{2} \log{5}}{\log{\Phi}} \\
   h = 1.44 \log{N_h}

Это выражение говорит о том, что каждый раз высота АВЛ-дерева равна константе (1.44), умноженной на логарифм высоты дерева. И это отличная новость для поиска по АВЛ-дереву, поскольку ограничивает его :math:`O(\log{N})`.
